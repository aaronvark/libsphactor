<class name = "sphactor" state = "stable">

    <callback_type name = "handler_fn">
        Callback function for socket activity
        <argument name = "event" type = "sphactor_event" />
        <argument name = "arg" type = "anything" />
        <return type = "zmsg" />
    </callback_type>

    <constructor>
        Constructor, creates a new Sphactor node. 
        <argument name = "handler" type = "sphactor_handler_fn" callback = "1" />
        <argument name = "arg" type = "anything" optional = "1" />
        <argument name = "name" type = "string" optional = "1" />
        <argument name = "uuid" type = "zuuid" optional = "1" />
    </constructor>

    <destructor>
        Destructor, destroys a Sphactor node. 
    </destructor>

    <method name = "uuid">
        Return our sphactor's UUID string, after successful initialization
        <return type = "zuuid" />
    </method>

    <method name = "name">
        Return our sphactor's name, after successful initialization. First 6
        characters of the UUID by default.
        <return type = "string" />
    </method>

    <method name = "endpoint">
        Return our sphactor's endpoint, after successful initialization. 
        The endpoint is usually inproc://{uuid}
        <return type = "string" />
    </method>

    <method name = "set name">
        Set the public name of this sphactor node overriding the default. 
        <argument name = "name" type = "string" />
    </method>

    <method name = "set rate">
        Set the iteration rate of this sphactor node. For example "60" runs 
        the method of the actor 60 times per second. Note that the 
        method receives a NULL message if it is triggered by timed event 
        as opposed to when triggered by a socket event.
        <argument name = "rate" type = "real" size="4" />
    </method>

    <method name = "get rate">
        Return the current rate of this sphactor node. By default the rate is -1 
        which means only triggers on socket events.
        <return type = "real" size = "4" />
    </method>

    <method name = "connect">
        Connect the node's sub socket to a pub endpoint. Returns 0 if succesful -1 on
        failure.
	<argument name = "endpoint" type="string" />
        <return type = "integer" />
    </method>

    <method name = "disconnect">
        Disconnect the node's sub socket from a pub endpoint. Returns 0 if succesful -1 on
        failure.
	<argument name = "endpoint" type="string" />
        <return type = "integer" />
    </method>

    <method name = "socket">
        Return socket for talking to the sphactor node and for polling.
        <return type = "zsock" />
    </method>

    <method name = "set verbose">
        Set the verbosity of the node. 
        <argument name = "on" type = "boolean" />
    </method>

    <method name = "zconfig new" singleton="1">
        Create new zconfig
        <argument name = "filename" type="string" mutable="0" />
        <return type = "zconfig" />
    </method>
    
    <method name = "zconfig append">
        Append to zconfig
        <argument name = "root" type="zconfig" />
        <return type = "zconfig" />
    </method>
</class>
    
